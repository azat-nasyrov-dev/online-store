# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Name {
  firstName: String!
  lastName: String!
}

type GeoLocation {
  lat: String!
  long: String!
}

type Address {
  city: String!
  street: String!
  number: Float!
  zipcode: String!
  geolocation: GeoLocation!
}

"""User entity"""
type UserEntity {
  """A unique identifier"""
  id: ID!
  email: String!
  username: String!
  role: RoleEnum!
  name: Name!
  address: Address!
  phone: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""User roles available in the system"""
enum RoleEnum {
  Regular
  Admin
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TokenResponse {
  accessToken: String!
  refreshToken: String!
}

"""Category entity"""
type CategoryEntity {
  """A unique identifier"""
  id: ID!
  title: String!
}

type Query {
  users: [UserEntity!]!
  user(id: String!): UserEntity!
  categories: [CategoryEntity!]!
  category(id: String!): CategoryEntity!
}

type Mutation {
  signUp(signUpInput: SignUpInput!): UserEntity!
  signIn(signInInput: SignInInput!): TokenResponse!
  refreshTokens(refreshTokenInput: RefreshTokenInput!): TokenResponse!
  createCategory(title: String!): CategoryEntity!
  updateCategory(id: String!, title: String!): CategoryEntity!
  deleteCategory(id: String!): Boolean!
}

"""SignUp input object type."""
input SignUpInput {
  email: String!
  username: String!
  password: String!
  name: NameInput!
  address: AddressInput!
  phone: String!
}

input NameInput {
  firstName: String!
  lastName: String!
}

input AddressInput {
  city: String!
  street: String!
  number: Float!
  zipcode: String!
  geolocation: GeoLocationInput!
}

input GeoLocationInput {
  lat: String!
  long: String!
}

"""SignIn input object type."""
input SignInInput {
  email: String!
  username: String
  password: String!
}

input RefreshTokenInput {
  refreshToken: String!
}